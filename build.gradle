buildscript {
    ext {
        jacksonVersion = "2.9.3"
        kotlinVersion  = "1.2.21"
        logbackVersion = "1.1.7"

        junitVersion = "5.0.0"
        junitGradleVersion = "1.0.1"
    }

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.junit.platform:junit-platform-gradle-plugin:$junitGradleVersion"
    }
}

apply plugin: "kotlin"
apply plugin: 'org.junit.platform.gradle.plugin'

version = "0.1.0"
group   = "com.github.plombardi89"

repositories {
    jcenter()
}

dependencies {
    compile "ch.qos.logback:logback-classic:$logbackVersion"

    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
    compile "com.fasterxml.jackson.module:jackson-module-parameter-names:$jacksonVersion"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jacksonVersion"

    compile "io.envoyproxy.controlplane:api:0.0.7"
    compile "io.envoyproxy.controlplane:cache:0.0.7"

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

    testCompile("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

junitPlatform {
    enableStandardTestTask
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = "4.6"
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Hypergate',
                'Implementation-Version': version,
                'Main-Class': 'hypergate.HypergateKt'
    }

    version  = null
    baseName = project.name + '-fat'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
